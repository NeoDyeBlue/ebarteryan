import Head from "next/head";
import dynamic from "next/dynamic";
import CreationLayout from "../components/Layouts/CreationLayout";
import InputField from "../components/Inputs/InputField";
import Textarea from "../components/Inputs/Textarea";
import ImageSelector from "../components/Inputs/ImageSelector";
// import DropdownSelect from "../components/Inputs/DropdownSelect";
const DropdownSelect = dynamic(
  () => import("../components/Inputs/DropdownSelect"),
  { ssr: false }
);
import { useState } from "react";
import { Location } from "@carbon/icons-react";
import MultiSelect from "../components/Inputs/MultiSelect";
import MultiSelectItem from "../components/Inputs/MultiSelectItem";
import { Collaborate, Delivery, Chat } from "@carbon/icons-react";
import IconDescription from "../components/IconDescription";
import Button from "../components/Button";

export default function Create() {
  const [formData, setFormData] = useState({
    category: "",
    offeringTime: "",
    claimingOptions: { toBeDecided: false, delivery: false, meetup: false },
  });

  function handleMultiSelectChange(event) {
    const { checked, name } = event.target;

    setFormData((prev) => ({
      ...prev,
      claimingOptions: {
        ...prev.claimingOptions,
        [name]: checked,
      },
    }));
  }

  function handleFormSubmit(event) {
    event.preventDefault();
    console.log("submit");
  }

  return (
    <div className="w-full">
      <Head>
        <title>Make a Barter | Barter Items at your Town</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container mx-auto flex max-w-3xl flex-col gap-4 py-6 md:mb-6">
        <h1 className="text-2xl font-semibold">Make a Barter</h1>
        <form className="flex flex-col gap-6" onSubmit={handleFormSubmit}>
          {/* Details */}
          <div className="flex flex-col gap-4">
            <p className="border-b border-gray-100 pb-2 text-sm text-gray-300">
              Details
            </p>
            <ImageSelector
              label="Upload Photos"
              infoMessage="You can upload up to 10 photos only."
            />
            <InputField
              label="Item Name"
              name="name"
              placeholder="Enter Item Name"
            />
            <Textarea
              label="Exchange for"
              placeholder="What do you want in exchange..."
            />
            <Textarea label="Description" placeholder="Item description..." />
            <DropdownSelect
              id="category"
              items={[1, 2, 3]}
              placeholder="Select a category"
              label="Category"
              selectedItem={formData.category}
              handleSelectedItemChange={({ selectedItem }) =>
                setFormData((prev) => ({ ...prev, category: selectedItem }))
              }
            />
          </div>
          {/* Location */}
          <div className="flex flex-col gap-4">
            <p className="border-b border-gray-100 pb-2 text-sm text-gray-300">
              Location
            </p>
            <div className="flex gap-2 py-2">
              <div className="flex items-center gap-1">
                <Location size={20} />
                <p className="font-medium">Pandi, Bulacan</p>
              </div>
              <span>|</span>
              <button
                type="button"
                className="font-display font-medium text-green-500"
              >
                Change
              </button>
            </div>
          </div>
          {/* Offering Time */}
          <div className="flex flex-col gap-4">
            <p className="border-b border-gray-100 pb-2 text-sm text-gray-300">
              Offering Time
            </p>
            <DropdownSelect
              id="offering-time"
              items={["An offer was accepted", 2, 3]}
              placeholder="Select an option"
              label="Offering will end when..."
              selectedItem={formData.offeringTime}
              handleSelectedItemChange={({ selectedItem }) =>
                setFormData((prev) => ({ ...prev, offeringTime: selectedItem }))
              }
            />
          </div>
          {/* Claiming Options */}
          <div className="flex flex-col gap-4">
            <p className="border-b border-gray-100 pb-2 text-sm text-gray-300">
              Claiming options
            </p>
            <MultiSelect
              label="How do you want the item to be claimed?"
              infoMessage="You can select more than one"
            >
              <MultiSelectItem
                name="meetup"
                checked={formData.claimingOptions.meetup}
                long={true}
                onChange={(event) => handleMultiSelectChange(event)}
              >
                <IconDescription
                  icon={<Collaborate size={24} />}
                  label="Meetup"
                  description="
                  After accepting an offer you could ask or decide where do you 
                  want the items to be claimed."
                />
              </MultiSelectItem>
              <MultiSelectItem
                name="delivery"
                checked={formData.claimingOptions.delivery}
                long={true}
                onChange={(event) => handleMultiSelectChange(event)}
              >
                <IconDescription
                  icon={<Delivery size={24} />}
                  label="Delivery"
                  description="
                  Delivery is set up by you after accepting an offer."
                />
              </MultiSelectItem>
              <MultiSelectItem
                name="toBeDecided"
                checked={formData.claimingOptions.toBeDecided}
                long={true}
                onChange={(event) => handleMultiSelectChange(event)}
              >
                <IconDescription
                  icon={<Chat size={24} />}
                  label="To be decided"
                  description="
                  After accepting an offer, both of you would chat about how the 
                  items will be claimed.
                  "
                />
              </MultiSelectItem>
            </MultiSelect>
          </div>
          <Button>Done</Button>
        </form>
      </div>
    </div>
  );
}

Create.getLayout = function getLayout(page) {
  return <CreationLayout>{page}</CreationLayout>;
};
