import { NavLayout } from "../../components/Layouts";
import Head from "next/head";
import { Email, UserIdentification } from "@carbon/icons-react";
// import { ResendOTP } from "otp-input-react";
import { FormikProvider, Form, useFormik } from "formik";
import { Button } from "../../components/Buttons";
import { DotLoader } from "react-spinners";
import { useState } from "react";
import { InputField } from "../../components/Inputs";
import { passwordResetSchema } from "../../lib/validators/user-validator";

export default function PasswordReset() {
  const [isSubmitting, setIsSubmitting] = useState(false);
  const resetFormik = useFormik({
    initialValues: {
      email: "",
    },
    onSubmit: handlePasswordResetSubmit,
    validationSchema: passwordResetSchema,
  });

  async function handlePasswordResetSubmit(values) {
    try {
      setIsSubmitting(true);
      const res = await fetch(`/api/verification/verify`, {
        method: "PATCH",
        body: JSON.stringify(values),
        headers: { "Content-Type": "application/json" },
      });
      const result = await res.json();
      if (result && result.success && result.data.verified) {
        await fetch("/api/auth/session?update");
      }
      setIsSubmitting(false);
    } catch (error) {
      setIsSubmitting(false);
    }
  }

  return (
    <div className="w-full">
      <Head>
        <title>Password Reset | eBarterYan</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container mx-auto flex min-h-[calc(100vh-70px-57.25px)] md:min-h-[calc(100vh-71.5px)]">
        <div
          className="m-auto flex max-w-[480px] flex-col items-center justify-center gap-6
        rounded-[10px] border border-gray-100 bg-white p-6 shadow-lg"
        >
          <UserIdentification size={100} className="text-gray-100" />
          <h1 className="text-4xl font-semibold">Password Reset</h1>
          <div className="flex flex-col gap-4 text-center">
            <p>Enter the email used in your account to reset its password.</p>
            <FormikProvider value={resetFormik}>
              <Form className="flex w-full flex-col gap-4">
                <InputField
                  type="email"
                  name="email"
                  value={resetFormik.values.email}
                  placeholder="Your Email"
                />
                <div className="flex w-full flex-col items-center gap-4">
                  <Button type="submit" disabled={isSubmitting}>
                    {isSubmitting ? (
                      <DotLoader color="#fff" size={24} />
                    ) : (
                      <p>Send</p>
                    )}
                  </Button>
                </div>
              </Form>
            </FormikProvider>
          </div>
          <p>
            Did&apos;nt receive it?{" "}
            <span className="font-display font-medium text-green-500 hover:underline">
              Resend
            </span>
          </p>
        </div>
      </div>
    </div>
  );
}

PasswordReset.getLayout = function getLayout(page) {
  return <NavLayout>{page}</NavLayout>;
};
