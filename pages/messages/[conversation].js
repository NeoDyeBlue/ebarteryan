import Head from "next/head";
import ChatHeader from "../../components/Messages/ChatHeader";
import ChatContainer from "../../components/Messages/ChatContainer";
import ChatBubble from "../../components/Messages/ChatBubble";
import ChatInput from "../../components/Messages/ChatInput";

export default function Conversation() {
  const userId = 1;
  const chats = [
    {
      id: 1,
      sender: {
        id: 1,
        name: "User Name",
        image: {
          url: "https://res.cloudinary.com/dppgyhery/image/upload/v1639759887/idiary/users/1005/xoyowlqk13x4znkcu63p.jpg",
        },
      },
      type: "text",
      content: "Hello",
    },
    {
      id: 2,
      sender: {
        id: 2,
        name: "User Name",
        image: {
          url: "https://res.cloudinary.com/dppgyhery/image/upload/v1639759887/idiary/users/1005/xoyowlqk13x4znkcu63p.jpg",
        },
      },
      type: "text",
      content: "Hello",
    },
    {
      id: 3,
      sender: {
        id: 2,
        name: "User Name",
        image: {
          url: "https://res.cloudinary.com/dppgyhery/image/upload/v1639759887/idiary/users/1005/xoyowlqk13x4znkcu63p.jpg",
        },
      },
      type: "text",
      content: "Hello",
    },
  ];

  const chatBubbles = chats.map((message, index) => {
    // console.log(message);
    let isFromUser = message.sender.id == userId ? true : false;
    if (index + 1 <= chats.length - 1) {
      if (message.sender.id == chats[index + 1].sender.id) {
        return (
          <ChatBubble
            key={index}
            isFromUser={isFromUser}
            consecutive={true}
            content={message.content}
            type={message.type}
          />
        );
      } else {
        return (
          <ChatBubble
            key={index}
            isFromUser={isFromUser}
            consecutive={false}
            content={message.content}
            userPic={message.sender.image.url}
            type={message.type}
          />
        );
      }
    } else {
      return (
        <ChatBubble
          key={index}
          isFromUser={isFromUser}
          consecutive={false}
          content={message.content}
          userPic={message.sender.image.url}
          type={message.type}
        />
      );
    }
  });

  return (
    <div className="grid h-screen max-h-screen w-full grid-cols-1 grid-rows-[auto_1fr_auto]">
      <Head>
        <title>Messages | eBarterYan</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container mx-auto border-b border-gray-100">
        <ChatHeader />
      </div>
      <div className="container mx-auto">
        <ChatContainer>{chatBubbles}</ChatContainer>
      </div>
      <div className="container mx-auto border-t border-gray-100">
        <ChatInput />
      </div>
    </div>
  );
}
