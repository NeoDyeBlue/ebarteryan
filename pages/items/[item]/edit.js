import Head from "next/head";
import { CreationLayout } from "../../../components/Layouts";
import { EditListingForm } from "../../../components/Forms";
import { useEffect } from "react";
import useUrlCallbackStore from "../../../store/useUrlCallbackStore";
import { getSession } from "next-auth/react";
import { getItem } from "../../../lib/controllers/item-controller";

export async function getServerSideProps(context) {
  const { params } = context;
  let url = "";
  let path = "/";
  let host =
    process.env.NODE_ENV == "production"
      ? process.env.PRODUCTION_URL
      : process.env.DEVELOPMENT_URL;
  let fromUser = false;
  const item = await getItem(params.item);
  if (!item) {
    return { notFound: true };
  }
  const session = await getSession(context);
  if (session && session?.user?.verified) {
    fromUser = item?.user?._id == session?.user?.id;
    if (!fromUser) {
      return {
        notFound: true,
      };
    }
  } else {
    if (!session) {
      return {
        redirect: {
          permanent: false,
          destination: "/login",
        },
        props: {},
      };
    } else if (session && !session?.user?.verified) {
      return {
        redirect: {
          permanent: false,
          destination: "/verification",
        },
        props: {},
      };
    }
  }
  if (context.req.headers.referer) {
    url = new URL(context.req.headers.referer) || null;
    path = url.pathname;
    host = `${url.protocol}//${context.req.headers.host}`;
  }
  return {
    props: {
      path,
      host,
      item: JSON.parse(JSON.stringify(item)),
    },
  };
}

export default function Edit({ path, host, item }) {
  const { setPath, setHost } = useUrlCallbackStore();
  useEffect(() => {
    setPath(path);
    setHost(host);
  }, [path, host, setPath, setHost]);

  return (
    <div className="w-full">
      <Head>
        <title>Edit Item | eBarterYan</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="container mx-auto">
        <EditListingForm item={item} />
      </div>
    </div>
  );
}
Edit.getLayout = function getLayout(page) {
  return <CreationLayout>{page}</CreationLayout>;
};
